; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\objects\usbuser.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\usbuser.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\RTE\_Target_1 -IC:\Users\ECBME\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\ECBME\AppData\Local\Arm\Packs\Keil\LPC1700_DFP\2.6.0\Device\Include -D__UVISION_VERSION=531 -D_RTE_ -DLPC175x_6x -D_RTE_ --omf_browse=.\objects\usbuser.crf usbuser.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  USB_Reset_Event PROC
;;;47     #if USB_RESET_EVENT
;;;48     void USB_Reset_Event (void) {
000000  b510              PUSH     {r4,lr}
;;;49       USB_ResetCore();
000002  f7fffffe          BL       USB_ResetCore
;;;50     }
000006  bd10              POP      {r4,pc}
;;;51     #endif
                          ENDP

                  USB_SOF_Event PROC
;;;92     #if USB_SOF_EVENT
;;;93     void USB_SOF_Event (void) {
000008  4770              BX       lr
;;;94     #if USB_DMA == 0
;;;95       if (USB_ReadEP(0x03, (BYTE *)&DataBuf[DataIn])) {
;;;96         /* Data Available */
;;;97         DataIn += P_S;                          /* Update Data In Index */
;;;98         DataIn &= B_S - 1;                      /* Adjust Data In Index */
;;;99         if (((DataIn - DataOut) & (B_S - 1)) == (B_S/2)) {
;;;100          DataRun = 1;                          /* Data Stream running */
;;;101        }
;;;102      } else {
;;;103        /* No Data */
;;;104        DataRun  = 0;                           /* Data Stream not running */
;;;105        DataOut  = DataIn;                      /* Initialize Data Indexes */
;;;106      }
;;;107    #endif
;;;108    }
;;;109    #endif
                          ENDP

                  USB_EndPoint1 PROC
;;;189    
;;;190    void USB_EndPoint1 (uint32_t event) {
00000a  4770              BX       lr
;;;191    }
;;;192    
                          ENDP

                  USB_EndPoint2 PROC
;;;199    
;;;200    void USB_EndPoint2 (uint32_t event) {
00000c  4770              BX       lr
;;;201    }
;;;202    
                          ENDP

                  USB_EndPoint3 PROC
;;;208    
;;;209    void USB_EndPoint3 (uint32_t event) {
00000e  b51f              PUSH     {r0-r4,lr}
000010  4604              MOV      r4,r0
;;;210    #if USB_DMA
;;;211      USB_DMA_DESCRIPTOR DD;
;;;212    
;;;213      if (event & USB_EVT_OUT_DMA_EOT) {
000012  f0040008          AND      r0,r4,#8
000016  b310              CBZ      r0,|L1.94|
;;;214        /* End of Transfer */
;;;215        if (USB_DMA_BufAdr(0x03) != ((uint32_t)DataBuf + 2*DataIn)) {
000018  2003              MOVS     r0,#3
00001a  f7fffffe          BL       USB_DMA_BufAdr
00001e  492b              LDR      r1,|L1.204|
000020  6809              LDR      r1,[r1,#0]  ; DataBuf
000022  4a2b              LDR      r2,|L1.208|
000024  8812              LDRH     r2,[r2,#0]  ; DataIn
000026  2302              MOVS     r3,#2
000028  fb031102          MLA      r1,r3,r2,r1
00002c  4288              CMP      r0,r1
00002e  d017              BEQ      |L1.96|
;;;216          /* Data Available */
;;;217          DataIn += P_C*P_S;                    /* Update Data In Index */
000030  4827              LDR      r0,|L1.208|
000032  8800              LDRH     r0,[r0,#0]  ; DataIn
000034  3080              ADDS     r0,r0,#0x80
000036  4926              LDR      r1,|L1.208|
000038  8008              STRH     r0,[r1,#0]
;;;218          DataIn &= B_S - 1;                    /* Adjust Data In Index */
00003a  4608              MOV      r0,r1
00003c  8800              LDRH     r0,[r0,#0]  ; DataIn
00003e  f3c00009          UBFX     r0,r0,#0,#10
000042  8008              STRH     r0,[r1,#0]
;;;219          if (((DataIn - DataOut) & (B_S - 1)) == (B_S/2)) {
000044  4608              MOV      r0,r1
000046  8800              LDRH     r0,[r0,#0]  ; DataIn
000048  4922              LDR      r1,|L1.212|
00004a  8809              LDRH     r1,[r1,#0]  ; DataOut
00004c  1a40              SUBS     r0,r0,r1
00004e  f3c00009          UBFX     r0,r0,#0,#10
000052  f5b07f00          CMP      r0,#0x200
000056  d10a              BNE      |L1.110|
;;;220            DataRun = 1;                        /* Data Stream running */
000058  2001              MOVS     r0,#1
00005a  491f              LDR      r1,|L1.216|
00005c  7008              STRB     r0,[r1,#0]
                  |L1.94|
00005e  e006              B        |L1.110|
                  |L1.96|
;;;221          }
;;;222        } else {
;;;223          /* No Data */
;;;224          DataRun = 0;                          /* Data Stream not running */
000060  2000              MOVS     r0,#0
000062  491d              LDR      r1,|L1.216|
000064  7008              STRB     r0,[r1,#0]
;;;225          DataOut = DataIn;                     /* Initialize Data Indexes */
000066  481a              LDR      r0,|L1.208|
000068  8800              LDRH     r0,[r0,#0]  ; DataIn
00006a  491a              LDR      r1,|L1.212|
00006c  8008              STRH     r0,[r1,#0]
                  |L1.110|
;;;226        }
;;;227      }
;;;228      if (event & (USB_EVT_OUT_DMA_EOT) | (USB_EVT_OUT_DMA_NDR)) {
00006e  200a              MOVS     r0,#0xa
000070  b1f0              CBZ      r0,|L1.176|
;;;229        /* End of Transfer or New Descriptor Request */
;;;230        DD.BufAdr  = (uint32_t)DataBuf + 2*DataIn; /* DMA Buffer Address */
000072  4816              LDR      r0,|L1.204|
000074  6800              LDR      r0,[r0,#0]  ; DataBuf
000076  4916              LDR      r1,|L1.208|
000078  8809              LDRH     r1,[r1,#0]  ; DataIn
00007a  2202              MOVS     r2,#2
00007c  fb020001          MLA      r0,r2,r1,r0
000080  9000              STR      r0,[sp,#0]
;;;231        DD.BufLen  = P_C;                       /* DMA Packet Count */
000082  2004              MOVS     r0,#4
000084  f8ad0004          STRH     r0,[sp,#4]
;;;232        DD.MaxSize = 0;                         /* Must be 0 for Iso Transfer */
000088  2000              MOVS     r0,#0
00008a  f8ad0006          STRH     r0,[sp,#6]
;;;233        DD.InfoAdr = (uint32_t)InfoBuf;            /* Packet Info Buffer Address */
00008e  4813              LDR      r0,|L1.220|
000090  6800              LDR      r0,[r0,#0]  ; InfoBuf
000092  9002              STR      r0,[sp,#8]
;;;234        DD.Cfg.Val = 0;                         /* Initial DMA Configuration */
000094  2000              MOVS     r0,#0
000096  9003              STR      r0,[sp,#0xc]
;;;235        DD.Cfg.Type.IsoEP = 1;                  /* Iso Endpoint */
000098  9803              LDR      r0,[sp,#0xc]
00009a  f0200002          BIC      r0,r0,#2
00009e  1c80              ADDS     r0,r0,#2
0000a0  9003              STR      r0,[sp,#0xc]
;;;236        USB_DMA_Setup (0x03, &DD);              /* Setup DMA */
0000a2  4669              MOV      r1,sp
0000a4  2003              MOVS     r0,#3
0000a6  f7fffffe          BL       USB_DMA_Setup
;;;237        USB_DMA_Enable(0x03);                   /* Enable DMA */
0000aa  2003              MOVS     r0,#3
0000ac  f7fffffe          BL       USB_DMA_Enable
                  |L1.176|
;;;238      }
;;;239    #else
;;;240      event = event;
;;;241    #endif
;;;242    }
0000b0  bd1f              POP      {r0-r4,pc}
;;;243    
                          ENDP

                  USB_EndPoint4 PROC
;;;250    
;;;251    void USB_EndPoint4 (uint32_t event) {
0000b2  4770              BX       lr
;;;252    }
;;;253    
                          ENDP

                  USB_EndPoint5 PROC
;;;260    
;;;261    void USB_EndPoint5 (uint32_t event) {
0000b4  4770              BX       lr
;;;262    }
;;;263    
                          ENDP

                  USB_EndPoint6 PROC
;;;270    
;;;271    void USB_EndPoint6 (uint32_t event) {
0000b6  4770              BX       lr
;;;272    }
;;;273    
                          ENDP

                  USB_EndPoint7 PROC
;;;280    
;;;281    void USB_EndPoint7 (uint32_t event) {
0000b8  4770              BX       lr
;;;282    }
;;;283    
                          ENDP

                  USB_EndPoint8 PROC
;;;290    
;;;291    void USB_EndPoint8 (uint32_t event) {
0000ba  4770              BX       lr
;;;292    }
;;;293    
                          ENDP

                  USB_EndPoint9 PROC
;;;300    
;;;301    void USB_EndPoint9 (uint32_t event) {
0000bc  4770              BX       lr
;;;302    }
;;;303    
                          ENDP

                  USB_EndPoint10 PROC
;;;310    
;;;311    void USB_EndPoint10 (uint32_t event) {
0000be  4770              BX       lr
;;;312    }
;;;313    
                          ENDP

                  USB_EndPoint11 PROC
;;;320    
;;;321    void USB_EndPoint11 (uint32_t event) {
0000c0  4770              BX       lr
;;;322    }
;;;323    
                          ENDP

                  USB_EndPoint12 PROC
;;;330    
;;;331    void USB_EndPoint12 (uint32_t event) {
0000c2  4770              BX       lr
;;;332    }
;;;333    
                          ENDP

                  USB_EndPoint13 PROC
;;;340    
;;;341    void USB_EndPoint13 (uint32_t event) {
0000c4  4770              BX       lr
;;;342    }
;;;343    
                          ENDP

                  USB_EndPoint14 PROC
;;;350    
;;;351    void USB_EndPoint14 (uint32_t event) {
0000c6  4770              BX       lr
;;;352    }
;;;353    
                          ENDP

                  USB_EndPoint15 PROC
;;;360    
;;;361    void USB_EndPoint15 (uint32_t event) {
0000c8  4770              BX       lr
;;;362    }
                          ENDP

0000ca  0000              DCW      0x0000
                  |L1.204|
                          DCD      DataBuf
                  |L1.208|
                          DCD      DataIn
                  |L1.212|
                          DCD      DataOut
                  |L1.216|
                          DCD      DataRun
                  |L1.220|
                          DCD      InfoBuf

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  USB_P_EP
                          DCD      USB_EndPoint0
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      USB_EndPoint3
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
